// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkinghoursManagement.Infrastructure.Context;

namespace WorkinghoursManagement.Infrastructure.Migrations
{
    [DbContext(typeof(WorkinghoursContext))]
    [Migration("20230204104919_Initial build")]
    partial class Initialbuild
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorkinghoursManagement.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK_User");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5997c8dc-b95e-45dc-a7b6-622f5d087da7"),
                            CreationDatetime = new DateTime(2023, 2, 4, 11, 49, 18, 696, DateTimeKind.Local).AddTicks(3458),
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("42030bd2-0ec4-445a-84fd-71bee25e3405"),
                            CreationDatetime = new DateTime(2023, 2, 4, 11, 49, 18, 698, DateTimeKind.Local).AddTicks(5007),
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("37b89795-4297-4678-8193-c98470a721c2"),
                            CreationDatetime = new DateTime(2023, 2, 4, 11, 49, 18, 698, DateTimeKind.Local).AddTicks(5023),
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("bf935030-aa9b-463f-8637-357ac08e8d1c"),
                            CreationDatetime = new DateTime(2023, 2, 4, 11, 49, 18, 698, DateTimeKind.Local).AddTicks(5026),
                            IsActive = true
                        });
                });

            modelBuilder.Entity("WorkinghoursManagement.Domain.Entities.WorkingHoursByUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_{nameof(WorkingHoursByUser)}");

                    b.HasIndex("UserId");

                    b.ToTable("WorkingHoursByUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("18be82f0-40d9-4678-9592-96bc64fe0cda"),
                            EndDateTime = new DateTime(2023, 2, 4, 19, 49, 18, 699, DateTimeKind.Local).AddTicks(2144),
                            StartDateTime = new DateTime(2023, 2, 4, 11, 49, 18, 699, DateTimeKind.Local).AddTicks(1970),
                            UserId = new Guid("5997c8dc-b95e-45dc-a7b6-622f5d087da7")
                        },
                        new
                        {
                            Id = new Guid("7f3ed7ad-8271-475d-a457-997d00c47b4f"),
                            EndDateTime = new DateTime(2023, 2, 4, 19, 49, 18, 699, DateTimeKind.Local).AddTicks(2296),
                            StartDateTime = new DateTime(2023, 2, 4, 11, 49, 18, 699, DateTimeKind.Local).AddTicks(2293),
                            UserId = new Guid("42030bd2-0ec4-445a-84fd-71bee25e3405")
                        },
                        new
                        {
                            Id = new Guid("ae16eef2-8cfc-4253-a966-15fa7567c698"),
                            EndDateTime = new DateTime(2023, 2, 4, 19, 49, 18, 699, DateTimeKind.Local).AddTicks(2309),
                            StartDateTime = new DateTime(2023, 2, 4, 11, 49, 18, 699, DateTimeKind.Local).AddTicks(2308),
                            UserId = new Guid("37b89795-4297-4678-8193-c98470a721c2")
                        },
                        new
                        {
                            Id = new Guid("6c8e3d98-45b6-48a0-9c2b-36590d300df7"),
                            EndDateTime = new DateTime(2023, 2, 4, 19, 49, 18, 699, DateTimeKind.Local).AddTicks(2313),
                            StartDateTime = new DateTime(2023, 2, 4, 11, 49, 18, 699, DateTimeKind.Local).AddTicks(2312),
                            UserId = new Guid("bf935030-aa9b-463f-8637-357ac08e8d1c")
                        });
                });

            modelBuilder.Entity("WorkinghoursManagement.Domain.Entities.WorkingHoursByUser", b =>
                {
                    b.HasOne("WorkinghoursManagement.Domain.Entities.User", "User")
                        .WithMany("WorkingHoursByUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_WorkingHoursByUser_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkinghoursManagement.Domain.Entities.User", b =>
                {
                    b.Navigation("WorkingHoursByUser");
                });
#pragma warning restore 612, 618
        }
    }
}
