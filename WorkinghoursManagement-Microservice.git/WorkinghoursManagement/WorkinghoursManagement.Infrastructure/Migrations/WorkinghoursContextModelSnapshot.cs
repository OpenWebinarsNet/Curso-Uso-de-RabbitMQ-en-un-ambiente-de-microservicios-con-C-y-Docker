// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkinghoursManagement.Infrastructure.Context;

namespace WorkinghoursManagement.Infrastructure.Migrations
{
    [DbContext(typeof(WorkinghoursContext))]
    partial class WorkinghoursContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorkinghoursManagement.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK_User");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5997c8dc-b95e-45dc-a7b6-622f5d087da7"),
                            CreationDatetime = new DateTime(2023, 2, 4, 23, 11, 24, 892, DateTimeKind.Local).AddTicks(9939),
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("42030bd2-0ec4-445a-84fd-71bee25e3405"),
                            CreationDatetime = new DateTime(2023, 2, 4, 23, 11, 24, 895, DateTimeKind.Local).AddTicks(1958),
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("37b89795-4297-4678-8193-c98470a721c2"),
                            CreationDatetime = new DateTime(2023, 2, 4, 23, 11, 24, 895, DateTimeKind.Local).AddTicks(1976),
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("bf935030-aa9b-463f-8637-357ac08e8d1c"),
                            CreationDatetime = new DateTime(2023, 2, 4, 23, 11, 24, 895, DateTimeKind.Local).AddTicks(1979),
                            IsActive = true
                        });
                });

            modelBuilder.Entity("WorkinghoursManagement.Domain.Entities.WorkingHoursByUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_{nameof(WorkingHoursByUser)}");

                    b.HasIndex("UserId");

                    b.ToTable("WorkingHoursByUsers");
                });

            modelBuilder.Entity("WorkinghoursManagement.Domain.Entities.WorkingHoursByUser", b =>
                {
                    b.HasOne("WorkinghoursManagement.Domain.Entities.User", "User")
                        .WithMany("WorkingHoursByUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_WorkingHoursByUser_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkinghoursManagement.Domain.Entities.User", b =>
                {
                    b.Navigation("WorkingHoursByUser");
                });
#pragma warning restore 612, 618
        }
    }
}
